- name: rhpam-rhdm-workshopv2-apb playbook to provision the application
  hosts: localhost
  gather_facts: false
  connection: local
  vars:
    openshift_user:
    openshift_password:
    openshift_token:
    openshift_master_url:
    openshift_user_password:
    project_suffix: "-XX"
    github_account: RedHat-Middleware-Workshops
    github_ref: master
    user_count: 5
    master_url: "kubernetes.default"
    modules: "{{ modules }}"

  roles:
  - role: ansible.kubernetes-modules
    install_python_requirements: no
  - role: ansibleplaybookbundle.asb-modules

  tasks:
  - name: login as super user with token
    shell: "oc login {{ master_url }} --token={{ openshift_token }} --insecure-skip-tls-verify=true"
    when:
      - openshift_token is defined
      - openshift_token is not none
      - openshift_token|trim() != ""
    tags: always

  - name: login as super user with pwd
    shell: "oc login {{ master_url }} -u {{ openshift_user }} -p {{ openshift_password }} --insecure-skip-tls-verify=true"
    when: >
      openshift_token is not defined or
      openshift_token is none or
      openshift_token|trim() == ""
    tags: always

  - name: Extract the app route suffix
    block:
      - name: Create an OpenShift Service
        openshift_raw:
          state: present
          definition:
            apiVersion: v1
            kind: Service
            metadata:
              name: dummy
              namespace: labs-infra
            spec:
              ports:
                - name: dummy-port
                  protocol: TCP
                  port: 8080
                  targetPort: 8080
      - name: Wait for Service to be created
        pause:
          seconds: 10
      - name: Create an OpenShift Route
        shell: oc expose service dummy -n labs-infra
      - name: Get OpenShif Route url
        shell: "oc get route dummy | awk 'FNR > 1 {print $2}'"
        register: oc_get_route_output
      - name: Set App Hostname suffix
        set_fact:
          apps_hostname_suffix: "{{ oc_get_route_output.stdout|regex_replace('^dummy-' + namespace + '\\.(.*)$', '\\1') }}"
      - name: Debug apps hostname suffix
        debug:
          msg: "App hostname suffix: {{ apps_hostname_suffix }}"
      - name: Delete an OpenShift Service
        openshift_raw:
          state: absent
          definition:
            apiVersion: v1
            kind: Service
            metadata:
              name: dummy
              namespace: labs-infra
      - name: Wait for Service to be deleted
        pause:
          seconds: 4
      - name: Delete an OpenShift Route
        openshift_raw:
          state: absent
          definition:
            apiVersion: v1
            kind: Route
            metadata:
              name: dummy
              namespace: labs-infra

  - name: delete project quota
    shell: "oc delete limitrange --all -n {{ namespace }}"
    ignore_errors: true
    tags: always

  #####################
  ### Import Guides ###
  #####################
  ## No guides should be imported at a first moment with this playbook
  # - import_role:
  #     name: openshift_workshopper
  #     allow_duplicates: true
  #   vars:
  #     workshopper_name: guides-m1
  #     project_name: "{{ namespace }}"
  #     workshopper_content_url_prefix: "https://raw.githubusercontent.com/{{ github_account }}/rhpam-rhdm-workshop-v1m1-guides/{{ github_ref }}"
  #     workshopper_workshop_urls: "https://raw.githubusercontent.com/{{ github_account }}/rhpam-rhdm-workshop-v1m1-guides/{{ github_ref }}/_rhpam-rhdm-workshop-module1.yml"
  #     workshopper_env_vars:
  #       PROJECT_SUFFIX: "{{ project_suffix }}"
  #       OPENSHIFT_CONSOLE_URL: "{{ openshift_master_url }}"
  #       NEXUS_URL: http://nexus-{{ namespace }}.{{ apps_hostname_suffix }}
  #   when: modules is search("m1")
  #   tags: guides

  # - import_role:
  #     name: openshift_workshopper
  #     allow_duplicates: true
  #   vars:
  #     workshopper_name: guides-m2
  #     project_name: "{{ namespace }}"
  #     workshopper_content_url_prefix: "https://raw.githubusercontent.com/{{ github_account }}/rhpam-rhdm-workshop-v1m2-guides/{{ github_ref }}"
  #     workshopper_workshop_urls: "https://raw.githubusercontent.com/{{ github_account }}/rhpam-rhdm-workshop-v1m2-guides/{{ github_ref }}/_rhpam-rhdm-workshop-module2.yml"
  #     workshopper_env_vars:
  #       PROJECT_SUFFIX: "{{ project_suffix }}"
  #       OPENSHIFT_CONSOLE_URL: "{{ openshift_master_url }}"
  #       NEXUS_URL: http://nexus-{{ namespace }}.{{ apps_hostname_suffix }}
  #   when: modules is search("m2")
  #   tags: guides

  # - import_role:
  #     name: openshift_workshopper
  #     allow_duplicates: true
  #   vars:
  #     workshopper_name: guides-m3
  #     project_name: "{{ namespace }}"
  #     workshopper_content_url_prefix: "https://raw.githubusercontent.com/{{ github_account }}/rhpam-rhdm-workshop-v1m3-guides/{{ github_ref }}"
  #     workshopper_workshop_urls: "https://raw.githubusercontent.com/{{ github_account }}/rhpam-rhdm-workshop-v1m3-guides/{{ github_ref }}/_rhpam-rhdm-workshop-module3.yml"
  #     workshopper_env_vars:
  #       PROJECT_SUFFIX: "{{ project_suffix }}"
  #       OPENSHIFT_CONSOLE_URL: "{{ openshift_master_url }}"
  #   when: modules is search("m3")
  #   tags: guides

  # - import_role:
  #     name: openshift_workshopper
  #     allow_duplicates: true
  #   vars:
  #     workshopper_name: guides-m4
  #     project_name: "{{ namespace }}"
  #     workshopper_content_url_prefix: "https://raw.githubusercontent.com/{{ github_account }}/rhpam-rhdm-workshop-v1m4-guides/{{ github_ref }}"
  #     workshopper_workshop_urls: "https://raw.githubusercontent.com/{{ github_account }}/rhpam-rhdm-workshop-v1m4-guides/{{ github_ref }}/_rhpam-rhdm-workshop-module4.yml"
  #     workshopper_env_vars:
  #       PROJECT_SUFFIX: "{{ project_suffix }}"
  #       OPENSHIFT_CONSOLE_URL: "{{ openshift_master_url }}"
  #   when: modules is search("m4")
  #   tags: guides

### Install Java ###

# install openjdk imagestream
  - name: get openjdk image stream
    shell: "oc get is java -n openshift"
    register: java_imagestream_result
    ignore_errors: true
    tags: jdk

  - name: install java image streams
    shell: "oc apply -n openshift -f https://raw.githubusercontent.com/jboss-container-images/openjdk/develop/templates/image-streams.json"
    when: java_imagestream_result is failed
    tags: jdk

### Install PAM templates ###

# install RHPAM Image Streams
  - name: Check if PAM ImageStreams exists
    shell: oc get is/rhpam-businesscentral-rhel8 -n openshift
    register: rhpam_is_exists_result
    ignore_errors: true
    tags: rhpam

  - name: Import the RHPAM ImageStreams into the cluster.
    shell: "oc create -f https://raw.githubusercontent.com/jboss-container-images/rhpam-7-openshift-image/7.11.x/rhpam711-image-streams.yaml  -n openshift"
    when: rhpam_is_exists_result is failed
    ignore_errors: true
    tags: rhpam

  - name: Check if RHPAM Authoring Template exists
    shell: oc get template/rhpam79-authoring -n openshift
    register: rhpam_template_authoring_exists_result
    ignore_errors: true
    tags: rhpam

  - name: Import the RHPAM Authoring Template into the cluster.
    shell: "oc create -f https://raw.githubusercontent.com/jboss-container-images/rhpam-7-openshift-image/7.11.x/templates/rhpam711-authoring.yaml -n openshift"
    when: rhpam_template_authoring_exists_result is failed
    ignore_errors: true
    tags: rhpam

  - name: Check if RHPAM Trial Template exists
    shell: oc get template/rhpam79-trial-ephemeral -n openshift
    register: rhpam_template_trial_exists_result
    ignore_errors: true
    tags: rhpam

  - name: Import the RHPAM Trial Ephemeral Template into the cluster.
    shell: "oc create -f https://raw.githubusercontent.com/jboss-container-images/rhpam-7-openshift-image/7.11.x/templates/rhpam711-trial-ephemeral.yaml -n openshift"
    when: rhpam_template_trial_exists_result is failed
    ignore_errors: true
    tags: rhpam

  # - name: Import Create React App template
  #   shell: "oc create -f https://raw.githubusercontent.com/DuncanDoyle/reactjs-openshift/master/create-react-app-openshift-template.yaml -n openshift"
  #   ignore_errors: true
  #   tags: rhpam

# Create database for reporting module
  - include_role:
      name: rhpam_reporting_database
    vars:
      OCP_PROJECT: '{{namespace}}'

# Create user projects
  - include_role:
      name: rhpam_project
    vars:
      USER_NUMBER: '{{item}}'
      OCP_PROJECT: 'rhpam-user{{item}}'
    with_sequence: start=1 end={{user_count}}

#  - include_tasks: ./rhpam_project.yml
#    vars:
#      USER_NUMBER: '{{item}}'
#      OCP_PROJECT: 'rhpam-user{{item}}'
#    with_sequence: start=1 end={{user_count}}

  - include_role:
      name: ansible_openshift_rhpam
    vars:
      OCP_PROJECT: 'rhpam-user{{item}}'
      RHPAM_VERSION_TAG: 7.11.x
      RHPAM_VERSION_ID: 711
      RHPAM_ENVIRONMENT: authoring
    with_sequence: start=1 end={{user_count}}

  - include_role:
      name: rhpam_bc
    vars:
      OCP_PROJECT: 'rhpam-user{{item}}'
    with_sequence: start=1 end={{user_count}}

  # - include_role:
  #     name: rhpam_bc_cm_showcase
  #   vars:
  #     OCP_PROJECT: 'rhpam-user{{item}}'
  #   with_sequence: start=1 end={{user_count}}

# Uncomment this in case using Trial-Ephemeral environment, as that already has CORS configured.
  - include_role:
     name: rhpam_ks
   vars:
     OCP_PROJECT: 'rhpam-user{{item}}'
   with_sequence: start=1 end={{user_count}}

# Comment this if using Trial-Ephemeral environment, as that already has CORS configured.
  # - include_role:
  #     name: rhpam_ks_cors
  #   vars:
  #     OCP_PROJECT: 'rhpam-user{{item}}'
  #   with_sequence: start=1 end={{user_count}}

  # - include_tasks: ./rhpam_decision-test-app.yml
  #   vars:
  #     OCP_PROJECT: 'rhpam-user{{item}}'
  #   with_sequence: start=1 end={{user_count}}
